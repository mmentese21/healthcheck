# üß† Disease Detection NLP Pipeline

A machine learning pipeline for detecting diseases based on patient symptom descriptions using **Bio_ClinicalBERT** and optional custom fine-tuned models.

## üìÅ Project Structure

```
.
‚îú‚îÄ‚îÄ train_classifier.py        # Fine-tunes Bio_ClinicalBERT or a custom model
‚îú‚îÄ‚îÄ detect_disease.py          # Runs predictions on test samples
‚îú‚îÄ‚îÄ train.csv                  # Your labeled dataset (index, label, text)
‚îú‚îÄ‚îÄ disease_classifier/        # Folder for saved model, tokenizer, and label map
‚îÇ   ‚îú‚îÄ‚îÄ config.json
‚îÇ   ‚îú‚îÄ‚îÄ pytorch_model.bin
‚îÇ   ‚îú‚îÄ‚îÄ tokenizer_config.json
‚îÇ   ‚îú‚îÄ‚îÄ vocab.txt
‚îÇ   ‚îî‚îÄ‚îÄ label_map.json
‚îî‚îÄ‚îÄ requirements.txt           # Required Python packages
```

## üöÄ Quickstart

### 1. Install Dependencies

Make sure you have Python 3.7+ and run:

```bash
pip install -r requirements.txt
```

### 2. Train the Model

Fine-tune the model using your `train.csv` file:

```bash
python train_classifier.py
```

> Make sure `train.csv` contains `index`, `label`, and `text` columns.

### 3. Run Inference

Run predictions on the test set (subset of `Symptom2Disease.csv`):

```bash
python detect_disease.py
```

You will be prompted to choose between using:
- `1` for Bio_ClinicalBERT
- `2` for your fine-tuned model in `disease_classifier/`

Predictions are saved to `predictions.txt`.

## üìù Notes

- The `detect_disease.py` script selects every 7th row from `Symptom2Disease.csv` for evaluation.
- Prediction results include the sample index, true label, predicted label, and confidence score.

## ‚úÖ Example Output

```
Choose model (1 for Bio_ClinicalBERT, 2 for custom): 2
Total samples: 57
Correct predictions: 43
```